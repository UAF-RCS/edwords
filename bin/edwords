#!/bin/bash
#	edwords - view or edit an encrypted 'words' file
################################################################################
unset SUDO NAWK WAMI HOST MAILX SUBJECT LGRP
if [ ! -r /opt/edwords/etc/xtools.cfg ]; then 
  echo "Missing xtools.cfg" >&2 
  exit 2
fi
. /opt/edwords/etc/xtools.cfg 

unset	SCRP LSDT WDIR LOGF MAIL BKOT 
	SCRP="${0##*/}"
	WDIR=/opt/edwords/etc           # Establish words directory
unset	READ OPTS OPTX OPTN NAME FILE LOCK UNLOCK
	READ=default			# Default is to read words
	OPTS=-read			# pre-set for sudo re-invocation
unset	ALERT TRAP VIEW VIXX EDIT SUMR
	ALERT=""			# Default update notification
	SUMR="/usr/bin/sum -r"
if [ ! -x "$MAILX" ]; then echo "missing mailx" >&2; exit 2; fi

###############################################################################

function clear_screen { # clear the screen
  /usr/bin/tput -S <<!EOFT
cup 0 0
clear
!EOFT
  unset	I
  typset -i I=0
  while [ 20 -gt I ]; do 
    I=$I+1 
    echo "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  done
}

#.............................................................................
function er_exit { # show error message & exit
  clear_screen
  if [ -n "$TRAP" ]; then set "$TRAP" 4; fi	# error trap occurred
  if [ -f "$UNLOCK" ]; then /bin/rm -f $UNLOCK; fi
  echo "$SCRP: $1" >&2;
  if [ -n "$2" ]; then exit $2
  else exit 1
  fi
}

#.............................................................................
function ex_usage { # show usage then exit
  echo -e "Usage: $SCRP [-read|-write] [-d directory] words-file\n" >&2
  if [ -n "$1" ]; then
    echo "$SCRP: $1" >&2
    exit 1
  else
    exit 2
  fi
}

##############################################################################

# parse any options
while [ -n "$1" -a -z "${1##*-*}" ]; do
  OPTN="${1#-*}";
  case "$OPTN" in
  (w*|W*) READ=""; EDIT="$VIXX"; OPTS="-write" ;;
  (r*|R*) READ=$OPTN; EDIT="$VIEW"; OPTS="-read" ;;
  (d*|D*) shift 1	
    if [ -z "$1" ]; then ex_usage "unspecified directory"; exit 1; fi
    WDIR="$1" # non-default words directory
    OPTX="-d $WDIR"
    ;;
  (h*|H*|\?) ex_usage; exit 1 ;;
  (*) ex_usage "Invalid option, -$OPTN"; exit 1 ;;
  esac
  shift 1
done

if [ -z "$1" ]; then ex_usage; exit 1; fi
if [ -n "$2" ]; then ex_usage "Too many args"; exit 1; fi
if [ ! -d "$WDIR" ]; then er_exit "$WDIR not found"; exit 1; fi
if [ -z "$WAMI" ]; then er_exit "missing whoami"; exit 1; fi

case "$HOST" in
  (admin1) VIEW="/usr/bin/rvim -x -M"; VIXX="/usr/bin/rvim -x" ;;
  (*) er_exit "do not know $HOST"; exit 1 ;;
esac

if [ -z "$READ" ]; then EDIT="$VIXX"; else EDIT="$VIEW"; fi

case "$WAMI" in
  (root) ;;
  (*)
    echo "$SCRP: Re-invoking with sudo...\n"
    $SUDO $0 $OPTS $OPTX $1
    exit $? 
esac

MAIL=$WDIR/mail                 # email notification list
BKOT=$WDIR/.words/backout       # keep backout copies
LOGF=$WDIR/log                  # log of reads, writes, updates
touch $LOGF
if [ 0 != $? ]; then er_exit "cannot write $LOGF"; exit 1; fi

if [ -n "$SUDO_USER" ]; then WAMI="$SUDO_USER";
elif [ -n "$LOGNAME" ]; then WAMI="$LOGNAME";
else er_exit "do not know who I really am"; exit 1;
fi

case "$1" in                    # establish words name
  (*words*) NAME=$1 ;;          # as specfified
  (*) NAME=.words.$1 ;;         # pre-pend .words
esac
FILE=$WDIR/.words/$NAME         # establish filename
if [ ! -f "$FILE" ]; then er_exit "not a file: $NAME"; exit 1; fi
if [ ! -w "$BKOT" ]; then er_exit "cannot write $BKOT"; exit 1; fi

if [ -n "$READ" ]; then
  LOCK=$WDIR/.words/$1.$WAMI    # read-only (copy, don't lock)
else
  LOCK=$WDIR/.words/$1.lock     # establish lockname
  if [ -f "$LOCK" ]; then er_exit "locked, `ls -l $LOCK`"; exit 1; fi
fi
/bin/cp -p $FILE $LOCK          # create lock
if [ 0 != $? ]; then er_exit "cp $LOCK failed"; exit 1; fi
UNLOCK="$LOCK"                  # in case of errors

/bin/chown $WAMI:$LGRP $LOCK    # stamp lock
if [ 0 != $? ]; then er_exit "cannot chown $LOCK"; exit 1; fi

unset ANS SUM1 SUM2 WAM8 ACC6
WAM8="$WAMI"
ACC6="$OPTS"                    # note read in log
echo "`date +%Y-%m-%d.%H:%M:%S` $WAM8 $ACC6 $FILE" >>$LOGF
if [ 0 != $? ]; then er_exit "log $LOGF failed"; exit 1; fi

trap "TRAP=Error; er_exit" 1 2 3

$EDIT $LOCK                     # edit (do the lock... a copy)

SUM1="`$SUMR $FILE | $NAWK '{echo $1}'`"
SUM2="`$SUMR $LOCK | $NAWK '{echo $1}'`"
if [ "$SUM1" = "$SUM2" ]; then er_exit "$NAME not changed" 0;	exit 0;	fi

if [ -n "$READ" ]; then         # read requested, skip the update
  er_exit "read requested, changes abandoned\n"
  exit 1
fi

unset ANS                       # require a valid answer
while [ -z "$ANS" ]; do
  echo "$SCRP: Make this the production file? [y|n] \c"
  read ANS
  echo ""
  case "$ANS" in
    (y*|Y*)
      echo "$SCRP: invoking with 'view -x' to validate encryption key\n"
      /bin/cp -p $LOCK $LOCK.v
      if [ 0 != $? ]; then er_exit "cp $LOCK.v failed"; exit 1; fi
      $VIEW $LOCK               # validate encryption key OK
      SUM1="`$SUMR $LOCK.v | $NAWK '{echo $1}'`"
      SUM2="`$SUMR $LOCK   | $NAWK '{echo $1}'`"
      if [ "$SUM1" != "$SUM2" ]; then
        echo "$SCRP: validation changed file...\n"
        ANS=""
      fi
      /bin/rm -f $LOCK.v
      ;;
    (n*|N*)  er_exit "abandoning changes" 0; exit 0 ;;
    (*)	 echo "$SCRP: Invalid response: $ANS\n"; ANS="" ;;
  esac
done

unset	ANS                     # make sure they really want to do this
while [ -z "$ANS" ]; do
  echo "$SCRP: Update $NAME? [y|n] \c"
  read ANS
  case "$ANS" in
    (y*|Y*)
    (n*|N*)  er_exit "abandoning changes" 0; exit 0 ;;
    (*)	echo "$SCRP: Invalid response: $ANS\n"; ANS="" ;;
  esac
done

/bin/cp $LOCK $FILE             # make file production
if [ 0 != $? ]; then er_exit "cp $LOCK failed"; exit 1; fi

ACC6="UPDATE"                   # note update in log
echo "`date +%Y-%m-%d.%H:%M:%S` $WAM8 $ACC6 $FILE" >>$LOGF

# set $1=yyyymmdd.HHMM $2=filename
set `ls -l --time-style="+%Y%m%d.%H%M" $FILE | awk '{echo $6" "$7}'`
mv $LOCK $BKOT/$NAME.$1         # make lock the backout copy
if [ 0 != $? ]; then er_exit "mv $BKOT/$NAME failed"; exit 1; fi

# email notification of words change
unset FILE LOCK ADDR MAILSUB TEXT
if [ -r "$MAIL" ]; then
  ADDR=`/bin/grep "^$NAME:" $MAIL | $NAWK -F: '{echo $2}'`
  if [ -n "$ADDR" ]; then ALERT="$ALERT $ADDR"; fi
fi
if [ -e "$SUBJECT" ]; then MAILSUB="`$SUBJECT 0 $SCRP $HOST 0 $NAME`"
else MAILSUB=":??:$SCRP   :$HOST :   0: $NAME:"
fi
echo "
Sending change notification to:
	$ALERT

Enter one line text summarizing changes:
  \c"
read TEXT

echo "$TEXT" | $MAILX -s "$MAILSUB" $ALERT $WAMI

# purge all but today's file(s) and one other copy
cd $BKOT
/usr/bin/find . -name "$NAME*" -mtime +1 | /bin/sort -r |
while read FILE; do
  if [ -z "$LOCK" ]; then
    LOCK=$FILE                  # skip latest
  else
    /bin/rm -f $FILE
  fi
done

er_exit "Updated file" 0
exit 0

